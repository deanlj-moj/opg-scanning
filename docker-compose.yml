services:
  service-app:
    build:
      context: ./service-app
    ports:
      - "8081:8081"
    environment:
      - SIRIUS_BASE_URL=http://sirius-mock:8080
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - SECRETS_MANAGER_PREFIX=local/
      - ENVIRONMENT=local
    healthcheck:
      test: wget -O /dev/null -S 'http://localhost:8081/health-check' 2>&1 | grep 'HTTP/1.1 200 OK' || exit 1
      interval: 5s
      timeout: 2s
      retries: 5
    depends_on:
      localstack:
        condition: service_healthy

  service-app-test:
    build:
      context: ./service-app
      target: build-env
    environment:
      - SIRIUS_BASE_URL=http://sirius-mock:8080
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - SECRETS_MANAGER_PREFIX=local/
      - ENVIRONMENT=local
    volumes:
      - .:/app
    working_dir: /app/service-app
    entrypoint:
      - "sh"
      - "-c"
      - |
        while ! nc -z localstack 4566; do
          echo "Waiting for Localstack to be ready..."
          sleep 1
        done
        echo "Localstack is ready. Running tests..."
        go test -v ./...
    depends_on:
      localstack:
        condition: service_healthy

  localstack:
    image: localstack/localstack:3.8
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"
      - "./localstack-data:/var/lib/localstack/data"
    environment:
      AWS_DEFAULT_REGION: eu-west-1
      SERVICES: "s3,secretsmanager,sqs,ssm"
      DEBUG: 1
      DATA_DIR: /var/lib/locals
    ports:
      - "4566:4566"
      - "4571:4571"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  sirius-mock:
    image: outofcoffee/imposter:4.5.7
    volumes:
      - ./docker/sirius:/opt/imposter/config
    ports:
      - 8088:8080
    healthcheck:
      test: ["CMD", "imposter", "list", "-x"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped
